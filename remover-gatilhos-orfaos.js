const cardapioService = require('./src/services/cardapioService');

async function removerGatilhosOrfaos() {
    try {
        console.log('üßπ REMOVENDO GATILHOS √ìRF√ÉOS');
        console.log('='.repeat(50));
        
        // Inicializar o servi√ßo
        await cardapioService.init();
        console.log('‚úÖ CardapioService inicializado');
        
        // IDs √≥rf√£os identificados na an√°lise
        const idsOrfaos = [18, 19, 54, 72, 74, 75, 76, 78];
        
        // Obter dados atuais
        const items = cardapioService.getItems();
        const mappings = cardapioService.getMappings();
        
        console.log(`\nüìä Estado atual:`);
        console.log(`- Total de itens: ${items.length}`);
        console.log(`- Total de gatilhos: ${Object.keys(mappings).length}`);
        
        // Verificar quais IDs realmente existem
        const idsExistentes = new Set(items.map(item => item.id));
        console.log(`\nüîç Verificando IDs √≥rf√£os:`);
        
        let gatilhosRemovidos = 0;
        let gatilhosOrfaosEncontrados = [];
        
        // Encontrar gatilhos que apontam para IDs √≥rf√£os
        Object.entries(mappings).forEach(([gatilho, itemId]) => {
            if (idsOrfaos.includes(itemId) || !idsExistentes.has(itemId)) {
                gatilhosOrfaosEncontrados.push({ gatilho, itemId });
            }
        });
        
        console.log(`\nüéØ Gatilhos √≥rf√£os encontrados: ${gatilhosOrfaosEncontrados.length}`);
        
        if (gatilhosOrfaosEncontrados.length === 0) {
            console.log('‚úÖ Nenhum gatilho √≥rf√£o encontrado!');
            return;
        }
        
        // Listar gatilhos √≥rf√£os antes de remover
        console.log('\nüìã Lista de gatilhos √≥rf√£os:');
        gatilhosOrfaosEncontrados.forEach((item, index) => {
            console.log(`${index + 1}. "${item.gatilho}" -> ID ${item.itemId} (n√£o existe)`);
        });
        
        console.log('\nüóëÔ∏è Removendo gatilhos √≥rf√£os...');
        
        // Remover cada gatilho √≥rf√£o
        for (const { gatilho, itemId } of gatilhosOrfaosEncontrados) {
            const sucesso = cardapioService.removeMapping(gatilho);
            if (sucesso) {
                gatilhosRemovidos++;
                console.log(`‚úÖ Removido: "${gatilho}" (ID ${itemId})`);
            } else {
                console.log(`‚ùå Erro ao remover: "${gatilho}" (ID ${itemId})`);
            }
        }
        
        console.log('\nüìä RESULTADO FINAL:');
        console.log('='.repeat(30));
        console.log(`Gatilhos √≥rf√£os removidos: ${gatilhosRemovidos}`);
        console.log(`Gatilhos restantes: ${Object.keys(cardapioService.getMappings()).length}`);
        
        if (gatilhosRemovidos > 0) {
            console.log('\n‚úÖ Limpeza conclu√≠da com sucesso!');
            console.log('üí° Recomenda√ß√£o: Execute novamente a an√°lise para verificar o resultado.');
        }
        
    } catch (error) {
        console.error('‚ùå Erro na remo√ß√£o:', error);
    }
}

removerGatilhosOrfaos();