const cardapioService = require('./src/services/cardapioService');

async function corrigirXpex() {
  try {
    console.log('=== CORRIGINDO MAPEAMENTO XPEX ===');
    
    // Inicializar o servi√ßo
    await cardapioService.init();
    console.log('‚úÖ CardapioService inicializado');
    
    // Buscar itens X-Frango
    const itens = cardapioService.getItems();
    const itensFrango = itens.filter(item => 
      item.nome && item.nome.toLowerCase().includes('frango')
    );
    
    console.log('\nüêî Itens de frango encontrados:');
    itensFrango.forEach(item => {
      console.log(`   - ID: ${item.id}, Nome: "${item.nome}", Pre√ßo: R$ ${item.preco}, Tipo: ${item.tipo}`);
    });
    
    // Escolher o item X-Frango mais recente (maior ID)
    const xFrangoEscolhido = itensFrango.reduce((prev, current) => 
      (prev.id > current.id) ? prev : current
    );
    
    if (!xFrangoEscolhido) {
      console.log('‚ùå Nenhum item de frango encontrado');
      return;
    }
    
    console.log(`\nüéØ Item escolhido para mapeamento:`);
    console.log(`   - ID: ${xFrangoEscolhido.id}`);
    console.log(`   - Nome: "${xFrangoEscolhido.nome}"`);
    console.log(`   - Pre√ßo: R$ ${xFrangoEscolhido.preco}`);
    
    // Verificar se o mapeamento j√° existe
    const mappings = cardapioService.getMappings();
    const xpexExistente = mappings['xpex'];
    
    if (xpexExistente) {
      console.log(`\n‚ö†Ô∏è  Mapeamento 'xpex' j√° existe apontando para ID ${xpexExistente}`);
      const itemExistente = itens.find(i => i.id === xpexExistente);
      if (itemExistente) {
        console.log(`   - Item atual: "${itemExistente.nome}"`);
      }
      console.log('   - Sobrescrevendo com o novo mapeamento...');
    }
    
    // Adicionar o mapeamento
    console.log('\nüîß Adicionando mapeamento "xpex"...');
    const sucesso = cardapioService.addMapping('xpex', xFrangoEscolhido.id);
    
    if (sucesso) {
      console.log(`‚úÖ Mapeamento "xpex" -> "${xFrangoEscolhido.nome}" (ID: ${xFrangoEscolhido.id}) adicionado com sucesso!`);
      
      // Verificar se foi salvo corretamente
      await cardapioService.init(); // Recarregar
      const mappingsAtualizados = cardapioService.getMappings();
      const xpexVerificacao = mappingsAtualizados['xpex'];
      
      if (xpexVerificacao === xFrangoEscolhido.id) {
        console.log('‚úÖ Verifica√ß√£o: Mapeamento salvo corretamente no banco de dados');
      } else {
        console.log('‚ùå Verifica√ß√£o: Problema ao salvar no banco de dados');
      }
      
      // Adicionar varia√ß√µes comuns tamb√©m
       console.log('\nüîß Adicionando varia√ß√µes do mapeamento...');
       const variacoes = ['x-pex', 'x pex'];
       let variacoesAdicionadas = 0;
       
       for (const variacao of variacoes) {
         if (!mappingsAtualizados[variacao]) {
           const sucessoVariacao = cardapioService.addMapping(variacao, xFrangoEscolhido.id);
           if (sucessoVariacao) {
             console.log(`‚úÖ Varia√ß√£o "${variacao}" adicionada`);
             variacoesAdicionadas++;
           } else {
             console.log(`‚ùå Erro ao adicionar varia√ß√£o "${variacao}"`);
           }
         } else {
           console.log(`‚ö†Ô∏è  Varia√ß√£o "${variacao}" j√° existe`);
         }
       }
       
       console.log(`\nüìä Resumo: ${variacoesAdicionadas}/${variacoes.length} varia√ß√µes adicionadas`);
       
    } else {
      console.log('‚ùå Erro ao adicionar mapeamento');
      return;
    }
    
    // Instru√ß√µes finais
    console.log('\n=== PR√ìXIMOS PASSOS ===');
    console.log('\n1. ‚úÖ MAPEAMENTO ADICIONADO:');
    console.log(`   - "xpex" agora aponta para "${xFrangoEscolhido.nome}"`);
    console.log('   - Este √© um mapeamento tempor√°rio baseado na melhor suposi√ß√£o');
    
    console.log('\n2. üß™ TESTAR:');
    console.log('   - Aguardar 30 segundos para o cache atualizar');
    console.log('   - Ou reiniciar o bot para for√ßar atualiza√ß√£o');
    console.log('   - Enviar "xpex" no WhatsApp para testar');
    
    console.log('\n3. üîç VERIFICAR SE EST√Å CORRETO:');
    console.log('   - Se o cliente confirmar que "xpex" √© outro item, ajustar o mapeamento');
    console.log('   - Usar: cardapioService.addMapping("xpex", ID_CORRETO)');
    
    console.log('\n4. ‚ö†Ô∏è  IMPORTANTE:');
    console.log('   - Este √© um mapeamento tempor√°rio baseado em suposi√ß√£o');
    console.log('   - Verificar com o propriet√°rio qual item deveria ser "xpex"');
    console.log('   - Pode ser necess√°rio ajustar para o item correto');
    
    console.log('\nüéâ Corre√ß√£o tempor√°ria aplicada com sucesso!');
    console.log('üí° O problema de reconhecimento do "xpex" deve estar resolvido agora');
    
  } catch (error) {
    console.error('‚ùå Erro ao corrigir xpex:', error);
  }
}

corrigirXpex();